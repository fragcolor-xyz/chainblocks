name: Build (iOS)

on:
  workflow_dispatch:
    inputs:
      rust-cache:
        description: Use existing rust cache?
        required: false
        default: false
        type: boolean
  workflow_call:
    inputs:
      rust-cache:
        required: false
        default: true
        type: boolean

jobs:
  #
  # Build shards for iOS
  #
  iOS:
    runs-on: macos-latest
    steps:
      - name: Setup
        id: setup
        run: |
          echo "::set-output name=rust-cache::${{ github.event.inputs.rust-cache || inputs.rust-cache }}"
      - name: Checkout shards
        uses: actions/checkout@v3
        with:
          repository: fragcolor-xyz/shards
          fetch-depth: 1
          submodules: recursive
      - name: Set up dependencies
        run: |
          sudo xcode-select --switch /Applications/Xcode.app
          brew install cmake clang-format
          ./bootstrap
          rustup toolchain install nightly
          rustup +nightly target add aarch64-apple-ios
          rustup +nightly target add x86_64-apple-ios
          rustup default nightly
      - uses: Swatinem/rust-cache@v2
        if: ${{ steps.setup.outputs.rust-cache == 'true' }}
        with:
          workspaces: |
            . -> build/target
            src/gfx/rust/gfx -> ../../../../build/target
      - name: Build device
        run: |
          cmake -Bbuild_arm64 -GXcode -DCMAKE_BUILD_TYPE=Debug -DCMAKE_SYSTEM_NAME=iOS -DCMAKE_SYSTEM_PROCESSOR=arm64 -DXCODE_SDK=iphoneos
          cmake --build build_arm64 --target shards-core-static -- -arch arm64 -sdk iphoneos
      - name: Build simulator x86
        run: |
          cmake -Bbuild_sim_x86 -GXcode -DCMAKE_BUILD_TYPE=Debug -DCMAKE_SYSTEM_NAME=iOS -DCMAKE_SYSTEM_PROCESSOR=x86_64 -DXCODE_SDK=iphonesimulator
          cmake --build build_sim_x86 --target shards-core-static -- -arch x86_64 -sdk iphonesimulator
