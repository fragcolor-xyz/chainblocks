(defshards innitialize-character []
  (LoadImage "GlodImages/Character1.png") = .character-image)

(defshards LoadTexture [name]
  (LoadImage name)
  (GFX.Texture))

(defshards button-inputs []
  (Inputs.KeyDown
   :Key "left"
   :Action ( ->
            (Msg "left")))

  (Inputs.KeyDown
   :Key "right"
   :Action (Msg "right"))

  (Inputs.KeyDown
   :Key "up"
   :Action (Msg "up")))

(defshards LoadTexture [name]
  (LoadImage name)
  (GFX.Texture))

(defshards button-inputs []
  (Inputs.KeyDown
   :Key "left"
   :Action ( ->
            (Msg "left")))

  (Inputs.KeyDown
   :Key "right"
   :Action (Msg "right"))

  (Inputs.KeyDown
   :Key "up"
   :Action (Msg "up")))

(defloop main-wire
  (Setup
   (innitialize-character))

  (GFX.MainWindow
   :Title "MainWindow" :Width 1920 :Height 1080
   :Contents
   (-> (Setup
        (GFX.DrawQueue) >= .ui-draw-queue
        (GFX.UIPass .ui-draw-queue) >> .render-steps)
       .ui-draw-queue (GFX.ClearQueue)

       (UI
        .ui-draw-queue
        (->))

       (GFX.Render :Steps .render-steps))))


(defmesh main)
(schedule main main-wire)
(run main (/ 1.0 60))
