WHITESPACE     = _{ " " | "\t" | NEWLINE | COMMENT }
COMMENT        = _{ ";" ~ (!"\n" ~ ANY)* ~ "\n" }
Statement      = _{ (Assignment | Pipeline) }
Sequence       =  { Statement* }
Assignment     =  { AssignRef | AssignSet | AssignUpd | AssignPush }
AssignRef      =  { Pipeline ~ "=" ~ LowIden }
AssignSet      =  { Pipeline ~ ">=" ~ LowIden }
AssignUpd      =  { Pipeline ~ ">" ~ LowIden }
AssignPush     =  { Pipeline ~ ">>" ~ LowIden }
Pipeline       =  { Block ~ ("|" ~ Block)* }
Block          = _{ Vector | EvalExpr | Expr | Shard | TakeTable | TakeSeq | ConstValue | Shards }
Shard          =  { UppIden ~ Params? }
Params         =  { "(" ~ Param* ~ Param? ~ ")" }
Shards         =  { "{" ~ Sequence? ~ "}" }
TableKey       = ${ (Iden | Value) ~ ":" }
TableEntry     =  { TableKey ~ Value }
Table          =  { "{" ~ TableEntry* ~ "}" }
RoundParens    = _{ "(" ~ Sequence ~ ")" }
EvalExpr       =  { "#" ~ RoundParens }
Expr           =  { RoundParens }
Vector         =  { "(" ~ Number ~ Number+ ~ ")" }
Param          =  { ParamName? ~ Value }
ParamName      = ${ UppIden ~ ":" }
TakeTable      = @{ LowIden ~ (":" ~ Iden)+ }
TakeSeq        = @{ LowIden ~ (":" ~ Integer)+ }
ConstValue     =  { None | Boolean | LowIden | Number | String | Seq | Table }
Value          =  { TakeTable | TakeSeq | ConstValue | Enum | Shards | Vector | EvalExpr | Expr }
Seq            =  { "[" ~ Value* ~ "]" }
Enum           = @{ ASCII_ALPHA_UPPER ~ (ASCII_ALPHANUMERIC | "_")+ ~ "." ~ (ASCII_ALPHANUMERIC | "_")+ }
UppIden        = @{ ASCII_ALPHA_UPPER ~ (ASCII_ALPHANUMERIC | "_" | "-" | ".")* }
LowIden        = @{ (ASCII_ALPHA_LOWER | "_") ~ (ASCII_ALPHANUMERIC | "_" | "-" | ".")* }
Iden           = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_" | "-" | ".")* }
Number         =  { Hexadecimal | Float | Integer }
Integer        = @{ ("+" | "-" | "~")? ~ ASCII_DIGIT+ }
Float          = @{ ("+" | "-" | "~")? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
Hexadecimal    = @{ "0x" ~ ASCII_HEX_DIGIT+ }
String         = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
Boolean        =  { "true" | "false" }
None           =  { "none" }
