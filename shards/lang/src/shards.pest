WHITESPACE     = _{ " " | "\t" | "\n" | "\r" | COMMENT }
COMMENT        = _{ ";" ~ (!"\n" ~ ANY)* ~ "\n" }
Statement      = _{ Assignment | Pipeline }
Sequence       =  { Statement* }
Assignment     =  { AssignRef | AssignSet | AssignUpd | AssignPush }
AssignRef      =  { Pipeline ~ "=" ~ Identifier }
AssignSet      =  { Pipeline ~ ">=" ~ Identifier }
AssignUpd      =  { Pipeline ~ ">" ~ Identifier }
AssignPush     =  { Pipeline ~ ">>" ~ Identifier }
Pipeline       =  { Block ~ (Operators | Blocks)* }
Blocks         = _{ ("|" ~ Block) }
Block          = _{ Vector | EvalExpr | Expr | Shard }
Operators      =  { (OperatorPlus | OperatorMinus | OperatorMul | OperatorDiv | OperatorPow | OperatorMatMul | OperatorMod) }
OperatorPlus   =  { "+" ~ Value }
OperatorMinus  =  { "-" ~ Value }
OperatorMul    =  { "*" ~ Value }
OperatorDiv    =  { "/" ~ Value }
OperatorPow    =  { "^" ~ Value }
OperatorMatMul =  { "@" ~ Value }
OperatorMod    =  { "%" ~ Value }
Shard          =  { (None | Bools | TakeTable | TakeSeq | Identifier | Value) ~ Params? }
Params         =  { "(" ~ Param* ~ Param? ~ ")" }
Shards         =  { "{" ~ Sequence? ~ "}" }
TableKey       = ${ Value ~ ":" }
TableEntry     =  { TableKey ~ Value }
Table          =  { "{" ~ TableEntry* ~ "}" }
RoundParens    = _{ "(" ~ Sequence ~ ")" }
EvalExpr       =  { "#" ~ RoundParens }
Expr           =  { RoundParens }
Vector         =  { "(" ~ Number ~ Number+ ~ ")" }
Param          =  { ParamName? ~ Value }
ParamName      = ${ Identifier ~ ":" }
TakeTable      = @{ Identifier ~ (":" ~ Identifier)+ }
TakeSeq        = @{ Identifier ~ (":" ~ Integer)+ }
Value          =  { None | Bools | TakeTable | TakeSeq | Identifier | Number | String | Seq | Table | Shards | Vector | EvalExpr | Expr }
Seq            =  { "[" ~ Value* ~ "]" }
Identifier     = @{ (ASCII_ALPHA | "_" | "-") ~ (ASCII_ALPHANUMERIC | "_" | "-" | ".")* }
Number         =  { Hexadecimal | Float | Integer }
Integer        = @{ ("+" | "-" | "~")? ~ ASCII_DIGIT+ }
Float          = @{ ("+" | "-" | "~")? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
Hexadecimal    = @{ "0x" ~ ASCII_HEX_DIGIT+ }
String         = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
Bools          =  { "true" | "false" }
None           =  { "none" }
