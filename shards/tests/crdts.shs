CRDT.Open(@i16(77)) = crdt
CRDT.Open(@i16(99)) = crdt-copy
10 | CRDT.Set(crdt "K1") | Log >> crdt-ops
"Hello World" | CRDT.Set(crdt "K2") | Log >> crdt-ops

CRDT.Save(crdt) | Log("pre delete") = crdt-snapshot-1

CRDT.Open(@i16(77)) = crdt2

crdt-snapshot-1 | CRDT.Load(crdt2)
CRDT.Save(crdt2) | Log("post load")
CRDT.Get(crdt2 "K1") | Assert.Is(10)
CRDT.Get(crdt2 "K2") | Assert.Is("Hello World")

CRDT.Get(crdt "K2") | Assert.Is("Hello World")
CRDT.Delete(crdt "K2") | Log >> crdt-ops
CRDT.Get(crdt "K2") | Assert.Is(none)

CRDT.Save(crdt) | Log("post delete") = crdt-snapshot-2

11 | CRDT.Set(crdt "K2") | Log >> crdt-ops

CRDT.Save(crdt) | Log("post set")

CRDT.Open(@i16(77)) = crdt3

crdt-snapshot-2 | CRDT.Load(crdt3)

CRDT.Save(crdt2) | Log("pre merge")
CRDT.Get(crdt2 "K2") | Assert.Is("Hello World")

CRDT.Merge(crdt2 crdt3)

CRDT.Save(crdt2) | Log("post merge")
CRDT.Get(crdt2 "K2") | Assert.Is(none)

crdt-ops | Log("ops")
Shuffle(crdt-ops) ; shuffle the operations to test the order of operations
crdt-ops | Log("shuffled ops")

crdt-ops | ForEach({
  Log("applying")
  CRDT.Apply(crdt-copy)
  CRDT.Save(crdt-copy) | Log("post apply")
})

CRDT.Save(crdt) = crdt-final-snapshot
CRDT.Save(crdt-copy) | Log("post apply final") | Is(crdt-final-snapshot) | Assert.Is(true)