@define(no-stroke { Color: @color(0 0 0 0) Width: 0.0 })
@define(stroke-2 { Color: @color(255 255 255) Width: 2.0 })
@define(stroke-4 { Color: @color(255 200 255) Width: 4.0 })

@wire(main {
  Once({
    GFX.DrawQueue = ui-draw-queue
    GFX.UIPass(ui-draw-queue) >> render-steps
  })
  GFX.MainWindow(Title: "SDL Window" Width: 1280 Height: 720 Contents: {
    UI({
      UI.Window(Contents: {
        UI.Style(AnimationTime: 0.5)
        UI.VisualsStyle( 
          OverrideTextColor: @color(255 100 100)
          Selection: {
              BGFill: @color(0 255 205 255)
              Stroke: @stroke-2
          }
        )
        UI.WidgetStyle(
          Inactive: {
            BGFill: @color(0 0 127)
            WeakBGFill: @color(0 0 20)
            BGStroke: @stroke-2
            Rounding: @f4(1.0)
            ; Stroke: @no-stroke
          }
          NonInteractive: {
            BGFill: @color(127 127 127 255)
            Stroke: @no-stroke
            BGStroke: @stroke-2
          }
          Hovered: {
            BGFill: @color(190 190 190 255)
            Stroke: @stroke-4
            BGStroke: @stroke-4
          }
          Active: {
            BGFill: @color(0 255 205 255)
            Stroke: @stroke-2
            BGStroke: @stroke-2
          }
          Open: {
            BGFill: @color(255 255 255 255)
            Stroke: @no-stroke
            BGStroke: @stroke-2
          }
        )
        "Label" | UI.Label
        UI.Button("Button")
        UI.TextField(text)
      })
    }) | UI.Render(ui-draw-queue)
    GFX.Render(Steps: render-steps)
  })
} Looped: true)

@mesh(root)
@schedule(root main)
@run(root FPS: 60)
