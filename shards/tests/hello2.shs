@template(say [what] {
  what >= hello
  " World!" | AppendTo(hello)
  what | Log
  hello | Log
})

@define(one 1)

@macro(macro1 [v] {
  v >= hello
  " World!" | AppendTo(hello)
  {String: hello} | ToJson
})

@macro(my-macro [n] {
  Sequence(pipelines)
  Repeat({
    {Pipeline: {blocks: [{content:
      {Shard: {name: {name: "Msg" namespaces: []}
              params:[{name: none value: {String: "Hello"}}]
      }}}]}} >> pipelines
  } Times: n)
  {statements: pipelines} | ToJson
})

@define(to-j-from-j {ToJson | ToHex})

@macro(if [cond yes no] {
  Sequence(pipelines)
  cond | If(IsAny([true "true" 1]) {
    {Pipeline: {blocks: [{content:
          {Shard: {name: {name: "SubFlow" namespaces: []}
                  params:[{name: none value: (@ast(yes) | FromJson)}]
          }}}]}}
  } {
    {Pipeline: {blocks: [{content:
          {Shard: {name: {name: "SubFlow" namespaces: []}
                  params:[{name: none value: (@ast(no) | FromJson)}]
          }}}]}}
  }) >> pipelines
  {statements: pipelines} | ToJson
})
