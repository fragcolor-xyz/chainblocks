@template(say [what] {
  what >= hello
  " World!" | AppendTo(hello)
  what | Log
  hello | Log
})

@define(one 1)

@macro(macro1 [v] {
  v >= hello
  " World!" | AppendTo(hello)
  {str: hello} | ToJson
})

@macro(my-macro [n] {
  Sequence(pipelines)
  Repeat({
    {
      sh: {
        name: "Msg"
        params: [{str: "Hello"}]
      }
    } >> pipelines
  } Times: n)
  [pipelines] | ToJson | Log
})

@define(to-j-from-j {ToJson | ToHex})

@macro(if [cond yes no] {
  Sequence(pipelines)
  cond | If(IsAny([true "true" 1]) {
      {
        sh: {
          name: "SubFlow"
          params: [(@ast(yes) | FromJson)]
        }
      }
    } {
      {
        sh: {
          name: "SubFlow"
          params: [(@ast(no) | FromJson)]
        }
      }
    }
  ) >> pipelines
  [pipelines] | ToJson
})
