@wire(main-wire {
  ["Hello" "world!" "How" "are" "we" "today?"]
  String.Join(Separator: " ") | Log
  Assert.Is("Hello world! How are we today?" true)

  "0x7777" | HexToBytes | Log | BigInt | BigInt.ToString | Assert.Is("30583") | Log

  ["Hello" "world!" "How" "are" "we" "today?"]
  Bytes.Join
  Assert.Is(("Helloworld!Howarewetoday?" | StringToBytes))

  [("Hello" | StringToBytes) "world!"]
  Bytes.Join
  Assert.Is(("Helloworld!" | StringToBytes))

  "hello" = hello
  "world" = world
  [hello " " world] | Bytes.Join | Assert.Is(("hello world" | StringToBytes))

  "fbl|pose:transform:0:rot" | String.Split(":")
  Assert.Is(["fbl|pose" "transform" "0" "rot"])

  """Something
Something else

And Again!""" | String.Split("\n\n") | Assert.Is([
    """Something
Something else"""
    """And Again!"""
  ])

  ; test keeping separator with preceding string
  "hello,world,foo,bar" | String.Split("," KeepSeparator: true) | Assert.Is(["hello," "world," "foo," "bar"])
  "a,,b,c" | String.Split("," KeepSeparator: true) | Assert.Is(["a," "," "b," "c"])

  [hello " " world] | String.Format | Log("fmt 1") | Assert.Is("hello world")
  [hello " " 4 "!"] | String.Format | Log("fmt 2") | Assert.Is("hello 4!")
  [] | String.Format | Log("fmt 3") | Assert.Is("")

  "_@abc.cc" | Regex.Search("""^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$""") | Assert.Is(["_@abc.cc"])
  "_@abc.c" | Regex.Search("""^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$""") | Assert.Is([])
  "_@abc.cc" | Regex.Match("""^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$""") | Assert.Is(["_@abc.cc"])
  "_@abc.c" | Regex.Match("""^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$""") | Assert.Is([])
})

@mesh(root)
@schedule(root main-wire)
@run(root) | Assert.Is(true)