(defmesh root)

(defloop inline-capture
  (Sequence .log :Types [Type.String])
  (Repeat (->
           (Msg "Hello shards!")
           (CaptureLog
            :Size 8
            :MinLevel "trace"
            :Pattern "%^[%l]%$ [%Y-%m-%d %T.%e] %v") > .log) :Times 16)
  .log (Msg "Captured log"))

(schedule root inline-capture)
(if (run root 0.05 1) nil (throw "Root tick failed"))

(defloop capture
  (CaptureLog
   :Size 8
   :MinLevel "trace"
   :Pattern "%^[%l]%$ [%Y-%m-%d %T.%e] %v"
   :Suspend true)
  (ExpectStringSeq) = .log
  (Count .log) (Msg "Got log messages"))
(defloop detach-capture
  (Setup
   (Detach capture))
  (Pause 0.4)
  (Msg "Hello shards!"))

(schedule root detach-capture)
(if (run root 0.1 16) nil (throw "Root tick failed"))
