; SPDX-License-Identifier: BSD-3-Clause
; Copyright Â© 2021 Fragcolor Pte. Ltd.

(defn logic [shards]
  (-> (Maybe shards)))

(defwire test-wire
  (Take "input-x") = .x
  (logic (-> {"x" .x "y" 20 "z" 30})))

(defn template []
  (-> {"input-x" 10} (Do test-wire)))

(defn test []
  (let [mesh (Mesh)
        wire (Wire
               "test"
               (template) = .res
               .res)
        code (do
               (schedule mesh wire)
(if (run mesh 0.1) nil (throw "Root tick failed"))
                    ; stop returns the text code
               (stop wire))
        res (read-var code)]
    res))

(test)
(test)
(test)