@wire(spawn{
  Msg("Hello")
} Looped: false)



@wire(main-wire {
  Audio.ReadFile("./data/Ode_to_Joy.ogg" From: 1.0 To: 2.0) = audio
  LoadImage("../../assets/ShardsLogo.png") = image
  image | ToString = img-string
  [1] | IntsToBytes = bytes

  [5 @i2(5) @i3(5) @i4(5) @i8(5) @i16(5) 5.0 @f2(5.0) @f3(5.0) @f4(5.0) @color(255) spawn {table:1} [1 2 3 4 5] [1.0 2.0 3.0 4.0 5.0] audio true image bytes "Hello" none] = input-seq
  
  input-seq
  TryMany(
    Wire: {IsAny(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true false false false false false false false false false false false false true false false false false false false false])
  Log("IsAnyResult-1")

  input-seq
  TryMany(
    Wire: {IsAny(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false false false false false false true false false false false false false false true false false false false false false])
  Log("IsAnyResult-2")

  input-seq
  TryMany(
    Wire: {IsAll(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true false false false false false false false false false false false false false false false false false false false false])
  Log("IsAllResult-1")

  input-seq
  TryMany(
    Wire: {IsAll(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false false false false false false true false false false false false false false false false false false false false false])
  Log("IsAllResult-2")

  input-seq
  TryMany(
    Wire: {IsAllNot(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false true true true true true true true true true true true true false true true true true true true true])
  Log("IsAllNotResult-1")

  input-seq
  TryMany(
    Wire: {IsAllNot(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true false true true true true true true true false true true true true true true])
  Log("IsAllNotResult-2")

  input-seq
  TryMany(
    Wire: {IsAnyNot(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false true true true true true true true true true true true true true true true true true true true true])
  Log("IsAnyNotResult-1")

  input-seq
  TryMany(
    Wire: {IsAnyNot(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true false true true true true true true true true true true true true true true])
  Log("IsAnyNotResult-2")

  input-seq
  TryMany(
    Wire: {IsAnyLess(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false false false false false false false false false false false false false true false false true false false false true])
  Log("IsAnyLessResult-1")

  input-seq
  TryMany(
    Wire: {IsAnyLess(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true false false false false false false false true true false true false false false true])
  Log("IsAnyLessResult-2")

  input-seq
  TryMany(
    Wire: {IsAllLess(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false false false false false false false false false false false false false false false false true false false false true])
  Log("IsAllLessResult-1")

  input-seq
  TryMany(
    Wire: {IsAllLess(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true false false false false false false false true false false true false false false true])
  Log("IsAllLessResult-2")

  input-seq
  TryMany(
    Wire: {IsAnyMore(1)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true true true true true true true true true true true false true true true false])
  Log("IsAnyMoreResult-1")

  input-seq
  TryMany(
    Wire: {IsAnyMore(1.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false false false false false false true true true true true true true false true true false true true true false])
  Log("IsAnyMoreResult-2")

  input-seq
  TryMany(
    Wire: {IsAllMore(1)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true true true true true true true true false true true false true true true false])
  Log("IsAllMoreResult-1")

  input-seq
  TryMany(
    Wire: {IsAllMore(1.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false false false false false false true true true true true true true false false true false true true true false])
  Log("IsAllMoreResult-2")

  input-seq
  TryMany(
    Wire: {IsAnyLessEqual(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true false false false false false false false false false false false false true false false true false false false true])
  Log("IsAnyLessEqualResult-1")

  input-seq
  TryMany(
    Wire: {IsAnyLessEqual(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true true false false false false false false true true false true false false false true])
  Log("IsAnyLessEqualResult-2")

  input-seq
  TryMany(
    Wire: {IsAllLessEqual(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true false false false false false false false false false false false false true false false true false false false true])
  Log("IsAllLessEqualResult-1")

  input-seq
  TryMany(
    Wire: {IsAllLessEqual(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true true false false false false false false true true false true false false false true])
  Log("IsAllLessEqualResult-2")

  input-seq
  TryMany(
    Wire: {IsAnyMoreEqual(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true true true true true true true true true true true false true true true false])
  Log("IsAnyMoreEqualResult-1")

  input-seq
  TryMany(
    Wire: {IsAnyMoreEqual(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false false false false false false true true true true true true true false true true false true true true false])
  Log("IsAnyMoreEqualResult-2")

  input-seq
  TryMany(
    Wire: {IsAllMoreEqual(5)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([true true true true true true true true true true true true true false true true false true true true false])
  Log("IsAllMoreEqualResult-1")

  input-seq
  TryMany(
    Wire: {IsAllMoreEqual(5.0)}
    Policy: WaitUntil::SomeSuccess
  )
  Assert.Is([false false false false false false true true true true true true true false false true false true true true false])
  Log("IsAllMoreEqualResult-2")
} Looped: false)

@mesh(root)
@schedule(root main-wire)
@run(root) | Assert.Is(true)