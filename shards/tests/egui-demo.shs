; SPDX-License-Identifier: BSD-3-Clause
; Copyright Â© 2022 Fragcolor Pte. Ltd.

@define(lorem_ipsum 
  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")
@define(input_value 42)

@template(window-with-panels [] {
  UI.Window(
    Title: "Window with Panels"
    Contents: {
      UI.TopPanel(
        Contents: {
          ; input was passed down the UI hierarchy
          Assert.Is(@input_value Break: true)
          "Top Window Panel" | UI.Label
        }
      )
      UI.BottomPanel(
        Contents: {
          "Bottom Window Panel" | UI.Label
        }
      )
      UI.LeftPanel(
        Resizable: false
        Contents: {
          "Left Window Panel" | UI.Label
        }
      )
      UI.RightPanel(
        Resizable: false
        Contents: {
          "Right Window Panel" | UI.Label
        }
      )
      UI.CentralPanel(
        Contents: {
          "Central Window Panel" | UI.Label
        }
      )
    }
  )
})

@wire(ui-wire {
  @input_value ; some input
  GFX.MainWindow(
    Title: "egui Shards Example" Width: 1280 Height: 768
    Contents: {
      Once({
        GFX.DrawQueue >= ui-draw-queue
        GFX.UIPass(ui-draw-queue) >> render-steps
      })

      {ui-draw-queue | GFX.ClearQueue}

      UI(
        {
          UI.TopPanel(
            Contents: {
              "Top Panel" | UI.Label
            }
          )
          UI.LeftPanel(
            Resizable: false 
            MaxSize: 120.0
            Contents: {
              "Left Panel" | UI.Label
              UI.Separator
              UI.Button("Click me!" {
                  Msg("Hello World!")
              })
            }
          )
          UI.RightPanel(
            Resizable: true
            DefaultSize: 180.0
            MinSize: 120.0
            MaxSize: 360.0
            Contents: {
              "Right Panel" | UI.Label
              UI.Separator
            }
          )
          UI.BottomPanel(
            Contents: {
              "Bottom Panel" | UI.Label
            }
          )
          UI.CentralPanel(
            Contents: {
              "Central Panel" | UI.Label
              @lorem_ipsum | UI.Label
            }
          )

          @window-with-panels()
        }
      ) | UI.Render(ui-draw-queue) 
      Assert.Is(@input_value Break: true)

      GFX.Render(Steps: render-steps)
    }
  )
} Looped: true)

@mesh(main)
@schedule(main ui-wire)
@run(main FPS: 60 Iterations: 120) | Assert.Is(true)

@schedule(main ui-wire)
@run(main FPS: 60 Iterations: 120) | Assert.Is(true)