;; Take on sequences
[10 20 30 40] (Take 1) (Log)
(Assert.Is 20 :Break true)
[10 20 30 40] (Take [1 2]) (Log)
(Assert.Is [20, 30] :Break true)

;; Take on tables
{"Hello" 10 "World" 20} (Take "Hello") (Log)
(Assert.Is 10 :Break true)
{"Hello" 10 "World" 20} (Take ["World" "Hello"]) (Log)
(Assert.Is [20, 10] :Break true)
{"Hello" 10 "World" 20} (Take "Universe") (Log)
(Assert.Is nil :Break true)
{:abc 10 :def 20} (Take "def") (Log)
(Assert.Is 20 :Break true)

;; Take using a variable as index
1 = .index
[1 2 3 4] (Take .index) (Log)
(Assert.Is 2 :Break true)
"Hello" = .key
{"Hello" 10 "World" 20} (Take .key) (Log)
(Assert.Is 10 :Break true)
