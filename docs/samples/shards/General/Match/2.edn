;; multiple matches + nil match at end + no passthrough
1
(Match [(+ 0 1) (-> "Matched 1a")  ;; case processed, match found
        1 (-> "Matched 1")         ;; case ignored
        2 (-> "Matched 2")         ;; case ignored
        nil (-> "Matched nil")]    ;; case ignored 
       :Passthrough false)         ;; no passthrough --
(Assert.Is "Matched 1a" true)      ;; -- so matched case's output becomes `Match` shard's output
