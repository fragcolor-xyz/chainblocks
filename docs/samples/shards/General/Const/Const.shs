; declare an int with `Const` and consume in `Math.Multiply`
Const(Value: 2) | Math.Multiply(4) | Log         ; => 8

; declare an int without `Const` and consume in `Math.Multiply`
2 | Math.Multiply(4) | Log       ; => 8

; declare a string with `Const`
Const("Hello World!") | Log    ; => "Hello World!"

; declare a sequence with `Const`
Const(["A" "B" "C"]) | Log     ; => ["A" "B" "C"]

; declare a Float4 with `Const`
Const(@f4(1 2 3 4)) | Log  ; => @f4(1 2 3 4)

; declare a table with `Const`
Const({key1: 10 key2: 20.0}) | Log  ; => {key1: 10 key2: 20.0}

; nullifying the input to a shard with Const(none)
"Hello World"        ; string input for Log
Const(none)         ; nulls the string input
Log                ; Log gets no input => None
