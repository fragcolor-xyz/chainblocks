; ; create a mutable string variable and get its value
"Hello" | Set(Name: svar) ; ; set value
Get(Name: svar) = gotSvar ; ; get value and store it
gotSvar | Log("gotten value") ; ; => gotten value: Hello

; ; create an immutable numeric variable and get its value
100 | Ref(Name: nvar) ; ; set value
Get(Name: nvar) >= gotNvar ; ; modify numeric variable
gotNvar | Log("gotten value") ; ; => gotten value: 100

; ; create a mutable sequence and get it
[10 20 30] | Set(Name: sequence)
Get(sequence) | Log ; ; => [10, 20, 30]

; ; create an empty sequence and try reading it with the Default: failsafe
[] | Set(Name: seqEmpty)
Get(Name: seqEmpty Default: "Void") | Log ; ; => Void

; ; create a table and get one of it's key-values pairs
["a" "b"] | Set(Name: table Key: "key1")
Get(Name: table Key: "key1") | Log ; ; => [a, b]

; ; create a table and try to get a non-existent key-value using the Default: parameter
["a" "b"] | Set(Name: table Key: "key1")
Get(Name: table Key: "key2" Default: "Key missing") | Log