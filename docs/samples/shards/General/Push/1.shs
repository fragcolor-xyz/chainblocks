; create and update sequence with Push; value available only to current wire
1 | Push(Name: seq1)                    ; create a sequence by pushing the first element
seq1 | Log(".seq1")                     ; sequence created => [1]
2 | Push(Name: seq1)                    ; push one more element into sequence
seq1 | Log(".seq1")                     ; sequence updated => [1, 2]

; create and update sequence with Push; value available to all wires on mesh
[10 20] | Push(Name: seq2 Global: true) ; create sequence with two elements
seq2 | Log(".seq2")                     ; sequence created => [10, 20]
30 | Push(Name: seq2 Global: true)      ; push one more element into sequence
seq2 | Log(".seq2")                     ; sequence updated => [10, 20, 30]

; create empty sequence with Sequence; add elements with Push
Sequence(Name: seq3)                    ; create empty sequence
seq3 | Log(".seq3")                     ; empty sequence created => []
1 | Push(Name: seq3 Clear: false)       ; push an element into sequence
seq3 | Log(".seq3")                     ; sequence updated => [1]               
2 | Push(Name: seq3 Clear: false)       ; push another element into sequence
seq3 | Log(".seq3")                     ; sequence updated => [1, 2]    

; create empty table with Table; add/update key sequence values with Push
Table(table1)                           ; created an empty table
table1 | Log                            ; table created => {}
1 | Push(table1 "A")                    ; push new key "A" with sequence value "[1]"
table1 | Log                            ; table key/value updated => {A: [1]}
2 | Push(table1 "A")                    ; push new element into key "A" existing sequence
table1 | Log                            ; table key/value updated => {A: [1, 2]}   

; create and update local/global sequence variables
"Local" | Push(seq)                     ; create local sequence variable with first push
"Global" | Push(seq Global: true)       ; create same-name global sequence variable with first push
Get(seq) | Log                          ; get local variable => [Local]
Get(seq Global: true) | Log             ; get same-name updated global variable => [Global]
"Local2" | Push(seq)                    ; push new value into local sequence variable
"Global2" | Push(seq Global: true)      ; push new value into same-name global sequence variable
Get(seq) | Log                          ; get updated local sequence variable => [Local, Local2]
Get(seq Global: true) | Log             ; get updated global sequence variable => [Global, Global2]

; Using a Push alias: >> is alias for Push(Clear: true) 
"Hello" >> seq4                         ; create sequence by pushing the first element
seq4 | Log(".seq4")                     ; sequence created => [Hello]
"World" >> seq4                         ; update the sequence by pushing one more element
seq4 | Log(".seq4")                     ; sequence updated with second element => [Hello, World]

; Technique to update a non-push created Tables sequence values with Push
{k1: [1 2 3]} >= table2                 ; table is created using Set
table2 | Log                            ; table with key/value pair created => {k1: [1 2 3]}
Get(table2 Key: "k1") >= seqvar         ; target value offloaded into a sequence variable
4 | Push(seqvar)                        ; update sequence variable using Push
seqvar | Log                            ; sequence variable updated => [1, 2, 3, 4] 
{k1: seqvar} >= table2                  ; update table key sequence value with modified sequence variable                      
table2 | Log                            ; targeted table key updated with required sequence values => {k1: [1 2 3 4]}
