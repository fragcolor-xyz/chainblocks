;; this test script is meant to test the PremultiplyAlpha and DemultiplyAlpha shards as well as the :PremultiplyAlpha behaviour of LoadImage shrad
;; however, this script uses GFX.Texture as well. Without GFX.Texture, the issues with non-premultiplied alpha may not appear for PNGs.

(GFX.MainWindow
 :Contents
 (->
  (Setup
   (GFX.DrawQueue) >= .ui-draw-queue
   (GFX.UIPass .ui-draw-queue) >> .render-steps)
  (UI
   (UI.CentralPanel
    (->
     (Setup
      (LoadImage "data/Damaged_Effect_5.png" :PremultiplyAlpha true) (GFX.Texture) = .premultiplied-alpha-image-1
      (LoadImage "data/Damaged_Effect_5.png" :PremultiplyAlpha false) (PremultiplyAlpha) (GFX.Texture) = .premultiplied-alpha-image-2
      (LoadImage "data/Damaged_Effect_5.png" :PremultiplyAlpha true) (DemultiplyAlpha) (PremultiplyAlpha) (GFX.Texture) = .premultiplied-alpha-image-3
      (LoadImage "data/Damaged_Effect_5.png" :PremultiplyAlpha false) (DemultiplyAlpha) (PremultiplyAlpha) (PremultiplyAlpha) (GFX.Texture) = .premultiplied-alpha-image-4
      (LoadImage "data/Damaged_Effect_5.png" :PremultiplyAlpha false) (GFX.Texture) = .non-premultiplied-alpha-image-1
      (LoadImage "data/Damaged_Effect_5.png" :PremultiplyAlpha false) (PremultiplyAlpha) (DemultiplyAlpha) (GFX.Texture) = .non-premultiplied-alpha-image-2
      (LoadImage "data/Damaged_Effect_5.png" :PremultiplyAlpha false) (PremultiplyAlpha) (DemultiplyAlpha) (DemultiplyAlpha) (GFX.Texture) = .non-premultiplied-alpha-image-3
      (LoadImage "data/Damaged_Effect_5.png" :PremultiplyAlpha true) (PremultiplyAlpha) (DemultiplyAlpha) (GFX.Texture) = .non-premultiplied-alpha-image-4)
     (UI.Horizontal
      :Contents 
      (-> 
       (UI.Vertical
        :Contents
        (->
         .premultiplied-alpha-image-1 (UI.Image :Scale (float2 0.25))
         .premultiplied-alpha-image-2 (UI.Image :Scale (float2 0.25))
         .premultiplied-alpha-image-3 (UI.Image :Scale (float2 0.25))
         .premultiplied-alpha-image-4 (UI.Image :Scale (float2 0.25))
         ))
       (UI.Vertical
        :Contents
        (->
         .non-premultiplied-alpha-image-1 (UI.Image :Scale (float2 0.25))
         .non-premultiplied-alpha-image-2 (UI.Image :Scale (float2 0.25))
         .non-premultiplied-alpha-image-3 (UI.Image :Scale (float2 0.25))
         .non-premultiplied-alpha-image-4 (UI.Image :Scale (float2 0.25))
     )))))))

  (GFX.Render :Steps .render-steps)))
