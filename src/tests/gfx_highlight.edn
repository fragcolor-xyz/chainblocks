(def timestep (/ 1.0 120.0))
(defmesh root)
(def BlendAlphaPremul {:Operation BlendOperation.Add :Src BlendFactor.One :Dst BlendFactor.OneMinusSrcAlpha})
(def BlendOne {:Operation BlendOperation.Add :Src BlendFactor.One :Dst BlendFactor.One})

(defn spin-transform [t location]
  (->
   t >= .tmp-0
   .tmp-0 (Math.Multiply 0.2) (Math.AxisAngleX) (Math.Rotation) >= .rotX
   .tmp-0 (Math.Multiply 0.7) (Math.AxisAngleY) (Math.Rotation) >= .rotY
   .tmp-0 (Math.Multiply 0.9) (Math.AxisAngleZ) (Math.Rotation) >= .rotZ
   location (Math.Translation) (Math.MatMul .rotX) (Math.MatMul .rotY) (Math.MatMul .rotZ)))

(defloop test-wire
  (Setup
   0.0 >= .time
   (GFX.BuiltinMesh :Type BuiltinMeshType.Cube) >= .mesh
   (Float3 0 0 0) (Math.Translation) >= .transform-0
   {:Mesh .mesh :Params {:baseColor (Float4 1 0 0 0.5)}} (GFX.Drawable :Transform .transform-0) >> .drawable-0

   (GFX.DrawQueue) >= .editor-queue

    ; Create render steps
   (GFX.BuiltinFeature BuiltinFeatureId.Transform) >> .features
   (GFX.BuiltinFeature BuiltinFeatureId.BaseColor) >> .features

   (GFX.DrawablePass :Features .features) >> .render-steps
   (GFX.DrawablePass :Features .features :Queue .editor-queue) >> .render-steps

    ;; Create view
   {:Position (Float3 0 0 8) :Target (Float3 0 0 0)} (Math.LookAt) >= .view-transform
   (GFX.View :View .view-transform) >= .view)
  (GFX.MainWindow
   :Title "SDL Window" :Width 1280 :Height 720 :Debug false
   :Contents
   (->
    .time (Math.Add timestep) > .time
    (spin-transform .time (Float3 0.0 0 0)) > .transform-0

    .drawable-0 (GFX.Draw)

    .editor-queue (GFX.ClearQueue)
    (Helpers.Context :Queue .editor-queue :View .view
                     :Content (->
                               .drawable-0 (Helpers.Highlight)))

    (GFX.Render :Steps .render-steps :View .view))))

(schedule root test-wire)
(run root timestep 200)
