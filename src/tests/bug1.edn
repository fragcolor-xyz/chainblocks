(defchain count-chain
  (If (Is 1)
      :Then (Pass)
      :Else
      (If (-> (Math.Mod 2) (Is 0))
          :Then (-> (Log "n") (Math.Divide 2) (Recur) (Math.Add 1))
          :Else (-> (Log "n") (Math.Multiply 3) (Math.Add 1) (Recur) (Math.Add 1)))))

(def main-chain (Chain "main-chain" :LStack
  837799 (Do count-chain)
  (Log "Answer")))

(defnode root)
(schedule root main-chain)
(run root)