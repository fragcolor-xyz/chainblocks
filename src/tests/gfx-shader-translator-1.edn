(def timestep (/ 1.0 120.0))

(defloop gfx
  (Setup
   0.0 >= .time

   {:EntryPoint (->
                 (Shader.ReadInput "texCoord0") >= .uv
                 (| .uv (Take 0) >= .u)
                 (| .uv (Take 1) >= .v)

                 0.0 >= .f-0
                 .u
                 (If (IsMore 0.75)
                     (-> .v > .f-0)
                     :Passthrough true)

                 0.0 >= .f-1
                 .u (If (IsLess .v)
                        :Then (-> .u > .f-1)
                        :Else (-> .v > .f-1)
                        :Passthrough true)

                 0.0 >= .f-2
                 .u (Math.Subtract .v) (Math.Abs)
                 (If (IsLessEqual 0.1)
                     :Then (-> 1.0 > .f-2)
                     :Else (->
                            (When (IsMoreEqual 0.8)
                                  (-> 0.5 > .f-2)))
                     :Passthrough true)

                 .v (Math.Multiply 20.0) (Math.Floor) (ToInt) >= .i
                 .i (When (Is 10)
                          (-> 1.0 > .f-0 > .f-1 > .f-2))

                 .i (When (-> .i (IsMore 15) (And) .i (IsNot 18)) (-> 0.0 > .f-0 > .f-1 > .f-2))

                 (When (-> .i (Is 2)) (->
                                       1.0 > .f-0 > .f-2
                                       0.0 > .f-1))

                 (Float4 .f-0 .f-1 .f-2 1.0)
                 (Shader.WriteOutput "color") ; End shader
                 )}
   (GFX.EffectPass) >> .render-steps)

  (GFX.Render :Steps .render-steps))

(defmesh root)
(schedule root (Wire "test-wire" :Looped :LStack
                     (GFX.MainWindow :Title "SDL Window" :Width 1280 :Height 720 :Debug false :Contents
                                     (Step gfx))))
(if (run root timestep 100) nil (throw "Root tick failed"))
