(def _args (eval `(assoc {} ~@*command-line-args*)))
(def test-rpcs (if (contains? _args "--rpcs") (read-string (get _args "--rpcs")) false))

(defnode root)
(defchain main
  ; test from hex string
  "0x9d61b19deffd5a60ba844af492ec2cc44449c5697b326919703bac031cae7f60"
  (| (Sr25519.PublicKey) (ToHex)
     (Assert.Is "0x44a996beb1eef7bdcab976ab6d2ca26104834164ecf28fb375600576fcc6eb0f" true))
  (| (Ed25519.PublicKey) (ToHex)
     (Assert.Is "0xd75a980182b10ab7d54bfed3c964073a0ee172f3daa62325af021a68f707511a" true))
  (| (ECDSA.PublicKey) (ToHex)
     (Assert.Is "0x048db55b05db86c0b1786ca49f095d76344c9e6056b2f02701a7e7f3c20aabfd913ebbe148dd17c56551a52952371071a6c604b3f3abe8f2c8fa742158ea6dd7d4"))
  ; test from bytes
  (HexToBytes)
  (| (Sr25519.PublicKey) (ToHex)
     (Assert.Is "0x44a996beb1eef7bdcab976ab6d2ca26104834164ecf28fb375600576fcc6eb0f" true))
  (| (Ed25519.PublicKey) (ToHex)
     (Assert.Is "0xd75a980182b10ab7d54bfed3c964073a0ee172f3daa62325af021a68f707511a" true))
  (| (ECDSA.PublicKey) (ToHex)
     (Assert.Is "0x048db55b05db86c0b1786ca49f095d76344c9e6056b2f02701a7e7f3c20aabfd913ebbe148dd17c56551a52952371071a6c604b3f3abe8f2c8fa742158ea6dd7d4"))

  "caution juice atom organ advance problem want pledge someone senior holiday very"
  (| (Sr25519.Seed) (ToHex) (Assert.Is "0xc8fa03532fb22ee1f7f6908b9c02b4e72483f0dbd66e4cd456b8f34c6230b849" true))
  (| (Sr25519.PublicKey)
     (| (ToHex) (Assert.Is "0xd6a3105d6768e956e9e5d41050ac29843f98561410d3a47f9dd5b3b227ab8746"))
     (| (Substrate.AccountId) (Assert.Is "5Gv8YYFu8H1btvmrJy9FjjAWfb99wrhV3uhPFoNEr918utyR" true)))
  (| (ECDSA.Seed) (Log) (ToHex) (Assert.Is "0xc8fa03532fb22ee1f7f6908b9c02b4e72483f0dbd66e4cd456b8f34c6230b849" true))
  (| (ECDSA.PublicKey)
     (| (ToHex) (Log))
     (| (Slice :From 1)
        (Hash.Keccak-256)
        (Slice :From 12)
        (ToHex)
        (Log "Eth Address")
        (Assert.Is "0x30bfedb19bab047810a0b27b87ff73ec3aa840f9" true)))
  
  (if test-rpcs (-> {"id" 1 "jsonrpc" "2.0" "method" "state_getMetadata"} (ToJson) (Http.Post "http://172.20.243.56:9933")
                    (FromJson) (ExpectTable) (Take "result") (ExpectString) = .metadata))

  ["Sudo" "Key"] (Substrate.StorageKey) (ToHex) (Assert.Is "0x5c0d1176a568c1f92944340dbfed9e9c530ebca703c85910e7164cb7d1c9e47b" true) = .sudo-key-data
  (if test-rpcs (-> {"id" 1 "jsonrpc" "2.0" "method" "state_getStorage" "params" [.sudo-key-data]} (ToJson) (Http.Post "http://172.20.243.56:9933") (Log)))
  ["Fragments" "Something"] (Substrate.StorageKey) (ToHex) = .frag-key-data
  (if test-rpcs (-> {"id" 1 "jsonrpc" "2.0" "method" "state_getStorage" "params" [.frag-key-data]} (ToJson) (Http.Post "http://172.20.243.56:9933") (Log)
                    (FromJson) (ExpectTable) (Take "result") (ExpectString) (HexToBytes) (Substrate.Decode [Type.Int] ["u32"]) (Log)))

  ["Balances" "FreeBalance"] (Substrate.StorageKey) (ToHex) (Assert.Is "0xc2261276cc9d1f8598ea4b6a74b15c2f6482b9ade7bc6657aaca787ba1add3b4" true)
  ["Balances" "FreeBalance" "0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d"] (Substrate.StorageMap) (ToHex) (Assert.Is "0xc2261276cc9d1f8598ea4b6a74b15c2f6482b9ade7bc6657aaca787ba1add3b4de1e86a9a8c739864cf3cc5ec2bea59fd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d" true)

  ["System" "Account" "0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d"] (Substrate.StorageMap) (ToHex) = .balance-data
  (if test-rpcs (-> {"id" 1 "jsonrpc" "2.0" "method" "state_getStorage" "params" [.balance-data]} (ToJson) (Log) (Http.Post "http://172.20.243.56:9933") (Log)
                    (FromJson) (ExpectTable) (Take "result") (ExpectString) (HexToBytes) (Substrate.Decode [Type.Int] ["u64"]) (Log)))

  ["Balances" "FreeBalance" "0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d" "0x002a"] (Substrate.StorageMap) (ToHex) (Assert.Is "0xc2261276cc9d1f8598ea4b6a74b15c2f6482b9ade7bc6657aaca787ba1add3b4de1e86a9a8c739864cf3cc5ec2bea59fd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27dce11f437743387ffa42428d46ee58416002a" true)

  "5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY" = .account-id
  [.account-id] (Substrate.Encode ["a"]) (| (ToHex) (Assert.Is "0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d" true))
  (Substrate.Decode [Type.String] ["a"]) (Log) (Assert.Is ["5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY"] true)
  [false 42] (Substrate.Encode [nil "u8"]) (| (ToHex) (Assert.Is "0x002a" true))
  (Substrate.Decode [Type.Bool Type.Int] [nil "u8"]) (Assert.Is [false 42] true)
  [false 42] (Substrate.Encode [nil "c"]) (| (ToHex) (Assert.Is "0x00a8" true))
  (Substrate.Decode [Type.Bool Type.Int] [nil "c"]) (Assert.Is [false 42] true)
  ["Hello world" "And universe" "And planets"] (Substrate.Encode [nil nil nil]) (Substrate.Decode [Type.String Type.String Type.String] [nil nil nil]) (Log)
  (Assert.Is ["Hello world" "And universe" "And planets"] true)
  ;
  )
(schedule root main)
(run root)